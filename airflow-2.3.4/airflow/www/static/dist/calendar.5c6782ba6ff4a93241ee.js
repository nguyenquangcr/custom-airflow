/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Airflow"] = factory();
	else
		root["Airflow"] = root["Airflow"] || {}, root["Airflow"]["calendar"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/calendar.js":
/*!*******************************!*\
  !*** ./static/js/calendar.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./static/js/utils.js\");\n/*!\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global calendarData, statesColors, document, window, $, d3, moment */\n\nconst gridUrl = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getMetaValue)('grid_url');\n\nfunction getGridViewURL(d) {\n  return `${gridUrl}?base_date=${encodeURIComponent(d.toISOString())}`;\n} // date helpers\n\n\nfunction formatDay(d) {\n  return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][d];\n}\n\nfunction toMoment(y, m, d) {\n  return moment.utc([y, m, d]);\n}\n\nfunction weekOfMonth(y, m, d) {\n  const monthOffset = toMoment(y, m, 1).day();\n  const dayOfMonth = toMoment(y, m, d).date();\n  return Math.floor((dayOfMonth + monthOffset - 1) / 7);\n}\n\nfunction weekOfYear(y, m) {\n  const yearOffset = toMoment(y, 0, 1).day();\n  const dayOfYear = toMoment(y, m, 1).dayOfYear();\n  return Math.floor((dayOfYear + yearOffset - 1) / 7);\n}\n\nfunction daysInMonth(y, m) {\n  const lastDay = toMoment(y, m, 1).add(1, 'month').subtract(1, 'day');\n  return lastDay.date();\n}\n\nfunction weeksInMonth(y, m) {\n  const firstDay = toMoment(y, m, 1);\n  const monthOffset = firstDay.day();\n  return Math.floor((daysInMonth(y, m) + monthOffset) / 7) + 1;\n}\n\nconst dateFormat = 'YYYY-MM-DD';\ndocument.addEventListener('DOMContentLoaded', () => {\n  $('span.status_square').tooltip({\n    html: true\n  }); // JSON.parse is faster for large payloads than an object literal\n\n  const rootData = JSON.parse(calendarData);\n  const dayTip = d3.tip().attr('class', 'tooltip d3-tip').html(toolTipHtml => toolTipHtml); // draw the calendar\n\n  function draw() {\n    // display constants\n    const leftRightMargin = 32;\n    const titleHeight = 24;\n    const yearLabelWidth = 34;\n    const dayLabelWidth = 14;\n    const dayLabelPadding = 4;\n    const yearPadding = 20;\n    const cellSize = 16;\n    const yearHeight = cellSize * 7 + 2;\n    const maxWeeksInYear = 53;\n    const legendHeight = 30;\n    const legendSwatchesPadding = 4;\n    const legendSwtchesTextWidth = 44; // group dag run stats by year -> month -> day -> state\n\n    let dagStates = d3.nest().key(dr => moment.utc(dr.date, dateFormat).year()).key(dr => moment.utc(dr.date, dateFormat).month()).key(dr => moment.utc(dr.date, dateFormat).date()).key(dr => dr.state).map(rootData.dag_states); // Make sure we have one year displayed for each year between the start and end dates.\n    // This also ensures we do not have show an empty calendar view when no dag runs exist.\n\n    const startYear = moment.utc(rootData.start_date, dateFormat).year();\n    const endYear = moment.utc(rootData.end_date, dateFormat).year();\n\n    for (let y = startYear; y <= endYear; y += 1) {\n      dagStates[y] = dagStates[y] || {};\n    }\n\n    dagStates = d3.entries(dagStates).map(keyVal => ({\n      year: keyVal.key,\n      dagStates: keyVal.value\n    })).sort(data => data.year); // root SVG element\n\n    const fullWidth = leftRightMargin * 2 + yearLabelWidth + dayLabelWidth + maxWeeksInYear * cellSize;\n    const yearsHeight = (yearHeight + yearPadding) * dagStates.length + yearPadding;\n    const fullHeight = titleHeight + legendHeight + yearsHeight;\n    const svg = d3.select('#calendar-svg').attr('width', fullWidth).attr('height', fullHeight).call(dayTip); // Add the legend\n\n    const legend = svg.append('g').attr('transform', `translate(0, ${titleHeight + legendHeight / 2})`);\n    let legendXOffset = fullWidth - leftRightMargin;\n\n    function drawLegend(rightState, leftState, numSwatches = 1, swatchesWidth = cellSize) {\n      const startColor = statesColors[leftState || rightState];\n      const endColor = statesColors[rightState];\n      legendXOffset -= legendSwtchesTextWidth;\n      legend.append('text').attr('x', legendXOffset).attr('y', cellSize / 2).attr('text-anchor', 'start').attr('class', 'status-label').attr('alignment-baseline', 'middle').text(rightState);\n      legendXOffset -= legendSwatchesPadding;\n      legendXOffset -= swatchesWidth;\n      legend.append('g').attr('transform', `translate(${legendXOffset}, 0)`).selectAll('g').data(d3.range(numSwatches)).enter().append('rect').attr('x', v => v * (swatchesWidth / numSwatches)).attr('width', swatchesWidth / numSwatches).attr('height', cellSize).attr('class', 'day').attr('fill', v => startColor.startsWith('url') ? startColor : d3.interpolateHsl(startColor, endColor)(v / numSwatches));\n      legendXOffset -= legendSwatchesPadding;\n\n      if (leftState !== undefined) {\n        legend.append('text').attr('x', legendXOffset).attr('y', cellSize / 2).attr('text-anchor', 'end').attr('class', 'status-label').attr('alignment-baseline', 'middle').text(leftState);\n        legendXOffset -= legendSwtchesTextWidth;\n      }\n    }\n\n    drawLegend('no_status');\n    drawLegend('planned');\n    drawLegend('running');\n    drawLegend('failed', 'success', 10, 100); // Add the years groups, each holding one year of data.\n\n    const years = svg.append('g').attr('transform', `translate(${leftRightMargin}, ${titleHeight + legendHeight})`);\n    const year = years.selectAll('g').data(dagStates).enter().append('g').attr('transform', (d, i) => `translate(0, ${yearPadding + (yearHeight + yearPadding) * i})`);\n    year.append('text').attr('x', -yearHeight * 0.5).attr('transform', 'rotate(270)').attr('text-anchor', 'middle').attr('class', 'year-label').text(d => d.year); // write day names\n\n    year.append('g').attr('transform', `translate(${yearLabelWidth}, ${dayLabelPadding})`).attr('text-anchor', 'end').selectAll('g').data(d3.range(7)).enter().append('text').attr('y', i => (i + 0.5) * cellSize).attr('class', 'day-label').text(formatDay); // create months groups to old the individual day cells & month outline for each month.\n\n    const months = year.append('g').attr('transform', `translate(${yearLabelWidth + dayLabelWidth}, 0)`);\n    const month = months.append('g').selectAll('g').data(data => d3.range(12).map(i => ({\n      year: data.year,\n      month: i,\n      dagStates: data.dagStates[i] || {}\n    }))).enter().append('g').attr('transform', data => `translate(${weekOfYear(data.year, data.month) * cellSize}, 0)`);\n\n    const tipHtml = data => {\n      const stateCounts = d3.entries(data.dagStates).map(kv => `${kv.value[0].count} ${kv.key}`);\n      const date = toMoment(data.year, data.month, data.day);\n      const daySr = formatDay(date.day());\n      const dateStr = date.format(dateFormat);\n      return `<strong>${daySr} ${dateStr}</strong><br>${stateCounts.join('<br>')}`;\n    }; // Create the day cells\n\n\n    month.selectAll('g').data(data => d3.range(daysInMonth(data.year, data.month)).map(i => {\n      const day = i + 1;\n      const dagRunsByState = data.dagStates[day] || {};\n      return {\n        year: data.year,\n        month: data.month,\n        day,\n        dagStates: dagRunsByState\n      };\n    })).enter().append('rect').attr('x', data => weekOfMonth(data.year, data.month, data.day) * cellSize).attr('y', data => toMoment(data.year, data.month, data.day).day() * cellSize).attr('width', cellSize).attr('height', cellSize).attr('class', 'day').attr('fill', data => {\n      const getCount = state => (data.dagStates[state] || [{\n        count: 0\n      }])[0].count;\n\n      const runningCount = getCount('running');\n      if (runningCount > 0) return statesColors.running;\n      const successCount = getCount('success');\n      const failedCount = getCount('failed');\n\n      if (successCount + failedCount === 0) {\n        const plannedCount = getCount('planned');\n        if (plannedCount > 0) return statesColors.planned;\n        return statesColors.no_status;\n      }\n\n      let ratioFailures;\n      if (failedCount === 0) ratioFailures = 0;else {\n        // We use a minimum color interpolation floor, so that days with low failures ratios\n        // don't appear almost as green as days with not failure at all.\n        const floor = 0.5;\n        ratioFailures = floor + failedCount / (failedCount + successCount) * (1 - floor);\n      }\n      return d3.interpolateHsl(statesColors.success, statesColors.failed)(ratioFailures);\n    }).on('click', data => {\n      window.location.href = getGridViewURL( // add 1 day and subtract 1 ms to not show any run from the next day.\n      toMoment(data.year, data.month, data.day).add(1, 'day').subtract(1, 'ms'));\n    }).on('mouseover', function showTip(data) {\n      const tt = tipHtml(data);\n      dayTip.direction('n');\n      dayTip.show(tt, this);\n    }).on('mouseout', function hideTip(data) {\n      dayTip.hide(data, this);\n    }); // add outline (path) around month\n\n    month.selectAll('g').data(data => [data]).enter().append('path').attr('class', 'month').style('fill', 'none').attr('d', data => {\n      const firstDayOffset = toMoment(data.year, data.month, 1).day();\n      const lastDayOffset = toMoment(data.year, data.month, 1).add(1, 'month').day();\n      const weeks = weeksInMonth(data.year, data.month);\n      return d3.svg.line()([[0, firstDayOffset * cellSize], [cellSize, firstDayOffset * cellSize], [cellSize, 0], [weeks * cellSize, 0], [weeks * cellSize, lastDayOffset * cellSize], [(weeks - 1) * cellSize, lastDayOffset * cellSize], [(weeks - 1) * cellSize, 7 * cellSize], [0, 7 * cellSize], [0, firstDayOffset * cellSize]]);\n    });\n  }\n\n  function update() {\n    $('#loading').remove();\n    draw();\n  }\n\n  update();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./static/js/calendar.js\n");

/***/ }),

/***/ "./static/js/utils.js":
/*!****************************!*\
  !*** ./static/js/utils.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"appendSearchParams\": () => (/* binding */ appendSearchParams),\n/* harmony export */   \"finalStatesMap\": () => (/* binding */ finalStatesMap),\n/* harmony export */   \"getMetaValue\": () => (/* binding */ getMetaValue)\n/* harmony export */ });\n/*!\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global document */\nfunction getMetaValue(name) {\n  const elem = document.querySelector(`meta[name=\"${name}\"]`);\n\n  if (!elem) {\n    return null;\n  }\n\n  return elem.getAttribute('content');\n}\nconst finalStatesMap = () => new Map([['success', 0], ['failed', 0], ['upstream_failed', 0], ['up_for_retry', 0], ['up_for_reschedule', 0], ['running', 0], ['deferred', 0], ['sensing', 0], ['queued', 0], ['scheduled', 0], ['skipped', 0], ['no_status', 0]]);\nconst appendSearchParams = (url, params) => {\n  const separator = url.includes('?') ? '&' : '?';\n  return `${url}${separator}${params}`;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvanMvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BaXJmbG93Ly4vc3RhdGljL2pzL3V0aWxzLmpzP2Q2OGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiBnbG9iYWwgZG9jdW1lbnQgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRNZXRhVmFsdWUobmFtZSkge1xuICBjb25zdCBlbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgbWV0YVtuYW1lPVwiJHtuYW1lfVwiXWApO1xuXG4gIGlmICghZWxlbSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCdjb250ZW50Jyk7XG59XG5leHBvcnQgY29uc3QgZmluYWxTdGF0ZXNNYXAgPSAoKSA9PiBuZXcgTWFwKFtbJ3N1Y2Nlc3MnLCAwXSwgWydmYWlsZWQnLCAwXSwgWyd1cHN0cmVhbV9mYWlsZWQnLCAwXSwgWyd1cF9mb3JfcmV0cnknLCAwXSwgWyd1cF9mb3JfcmVzY2hlZHVsZScsIDBdLCBbJ3J1bm5pbmcnLCAwXSwgWydkZWZlcnJlZCcsIDBdLCBbJ3NlbnNpbmcnLCAwXSwgWydxdWV1ZWQnLCAwXSwgWydzY2hlZHVsZWQnLCAwXSwgWydza2lwcGVkJywgMF0sIFsnbm9fc3RhdHVzJywgMF1dKTtcbmV4cG9ydCBjb25zdCBhcHBlbmRTZWFyY2hQYXJhbXMgPSAodXJsLCBwYXJhbXMpID0+IHtcbiAgY29uc3Qgc2VwYXJhdG9yID0gdXJsLmluY2x1ZGVzKCc/JykgPyAnJicgOiAnPyc7XG4gIHJldHVybiBgJHt1cmx9JHtzZXBhcmF0b3J9JHtwYXJhbXN9YDtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/js/utils.js\n");

/***/ }),

/***/ "./static/css/calendar.css":
/*!*********************************!*\
  !*** ./static/css/calendar.css ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvY3NzL2NhbGVuZGFyLmNzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BaXJmbG93Ly4vc3RhdGljL2Nzcy9jYWxlbmRhci5jc3M/NWNmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./static/css/calendar.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./static/css/calendar.css");
/******/ 	var __webpack_exports__ = __webpack_require__("./static/js/calendar.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});