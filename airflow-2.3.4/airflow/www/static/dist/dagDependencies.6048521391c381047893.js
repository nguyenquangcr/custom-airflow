/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Airflow"] = factory();
	else
		root["Airflow"] = root["Airflow"] || {}, root["Airflow"]["dagDependencies"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/dag_dependencies.js":
/*!***************************************!*\
  !*** ./static/js/dag_dependencies.js ***!
  \***************************************/
/***/ (() => {

eval("/*!\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n  global d3, localStorage, dagreD3, dagNodes, edges, arrange, document,\n*/\nconst highlightColor = '#000000';\nconst upstreamColor = '#2020A0';\nconst downstreamColor = '#0000FF';\nconst initialStrokeWidth = '3px';\nconst highlightStrokeWidth = '5px';\nconst duration = 500;\nlet nodes = dagNodes;\nconst fullNodes = nodes;\nconst filteredNodes = nodes.filter(n => edges.some(e => e.u === n.id || e.v === n.id)); // Preparation of DagreD3 data structures\n\nlet g = new dagreD3.graphlib.Graph().setGraph({\n  nodesep: 15,\n  ranksep: 15,\n  rankdir: arrange\n}).setDefaultEdgeLabel(() => ({\n  lineInterpolate: 'basis'\n}));\nconst render = dagreD3.render();\nconst svg = d3.select('#graph-svg');\nconst innerSvg = d3.select('#graph-svg g'); // Returns true if a node's id or its children's id matches search_text\n\nfunction nodeMatches(nodeId, searchText) {\n  if (nodeId.indexOf(searchText) > -1) return true;\n  return false;\n}\n\nfunction highlightNodes(nodesToHighlight, color, strokeWidth) {\n  nodesToHighlight.forEach(nodeid => {\n    const myNode = g.node(nodeid).elem;\n    d3.select(myNode).selectAll('rect,circle').style('stroke', color).style('stroke-width', strokeWidth);\n  });\n}\n\nlet zoom = null;\n\nfunction setUpZoomSupport() {\n  // Set up zoom support for Graph\n  zoom = d3.behavior.zoom().on('zoom', () => {\n    innerSvg.attr('transform', `translate(${d3.event.translate})scale(${d3.event.scale})`);\n  });\n  svg.call(zoom); // Centering the DAG on load\n  // Get Dagre Graph dimensions\n\n  const graphWidth = g.graph().width;\n  const graphHeight = g.graph().height; // Get SVG dimensions\n\n  const padding = 20;\n  const svgBb = svg.node().getBoundingClientRect();\n  const width = svgBb.width - padding * 2;\n  const height = svgBb.height - padding; // we are not centering the dag vertically\n  // Calculate applicable scale for zoom\n\n  const zoomScale = Math.min(Math.min(width / graphWidth, height / graphHeight), 1.5 // cap zoom level to 1.5 so nodes are not too large\n  );\n  zoom.translate([width / 2 - graphWidth * zoomScale / 2 + padding, padding]);\n  zoom.scale(zoomScale);\n  zoom.event(innerSvg);\n}\n\nfunction setUpNodeHighlighting(focusItem = null) {\n  d3.selectAll('g.node').on('mouseover', function (d) {\n    d3.select(this).selectAll('rect').style('stroke', highlightColor);\n    highlightNodes(g.predecessors(d), upstreamColor, highlightStrokeWidth);\n    highlightNodes(g.successors(d), downstreamColor, highlightStrokeWidth);\n    const adjacentNodeNames = [d, ...g.predecessors(d), ...g.successors(d)];\n    d3.selectAll('g.nodes g.node').filter(x => !adjacentNodeNames.includes(x)).style('opacity', 0.2);\n    const adjacentEdges = g.nodeEdges(d);\n    d3.selectAll('g.edgePath')[0] // eslint-disable-next-line no-underscore-dangle\n    .filter(x => !adjacentEdges.includes(x.__data__)).forEach(x => {\n      d3.select(x).style('opacity', 0.2);\n    });\n  });\n  d3.selectAll('g.node').on('mouseout', function (d) {\n    d3.select(this).selectAll('rect,circle').style('stroke', null);\n    highlightNodes(g.predecessors(d), null, initialStrokeWidth);\n    highlightNodes(g.successors(d), null, initialStrokeWidth);\n    d3.selectAll('g.node').style('opacity', 1);\n    d3.selectAll('g.node rect').style('stroke-width', initialStrokeWidth);\n    d3.selectAll('g.edgePath').style('opacity', 1);\n\n    if (focusItem) {\n      localStorage.removeItem(focusItem);\n    }\n  });\n}\n\nfunction searchboxHighlighting(s) {\n  let match = null;\n  d3.selectAll('g.nodes g.node').filter(function forEach(d) {\n    if (s === '') {\n      d3.select('g.edgePaths').transition().duration(duration).style('opacity', 1);\n      d3.select(this).transition().duration(duration).style('opacity', 1).selectAll('rect').style('stroke-width', initialStrokeWidth);\n    } else {\n      d3.select('g.edgePaths').transition().duration(duration).style('opacity', 0.2);\n\n      if (nodeMatches(d, s)) {\n        if (!match) match = this;\n        d3.select(this).transition().duration(duration).style('opacity', 1).selectAll('rect').style('stroke-width', highlightStrokeWidth);\n      } else {\n        d3.select(this).transition().style('opacity', 0.2).duration(duration).selectAll('rect').style('stroke-width', initialStrokeWidth);\n      }\n    }\n\n    return null;\n  }); // This moves the matched node to the center of the graph area\n\n  if (match) {\n    const transform = d3.transform(d3.select(match).attr('transform'));\n    const svgBb = svg.node().getBoundingClientRect();\n    transform.translate = [svgBb.width / 2 - transform.translate[0], svgBb.height / 2 - transform.translate[1]];\n    transform.scale = [1, 1];\n\n    if (zoom !== null) {\n      zoom.translate(transform.translate);\n      zoom.scale(1);\n      zoom.event(innerSvg);\n    }\n  }\n}\n\nd3.select('#searchbox').on('keyup', () => {\n  const s = document.getElementById('searchbox').value;\n  searchboxHighlighting(s);\n});\n\nconst renderGraph = () => {\n  g = new dagreD3.graphlib.Graph().setGraph({\n    nodesep: 15,\n    ranksep: 15,\n    rankdir: arrange\n  }).setDefaultEdgeLabel(() => ({\n    lineInterpolate: 'basis'\n  })); // set nodes\n\n  nodes.forEach(node => {\n    g.setNode(node.id, node.value);\n  }); // filter out edges that point to non-existent nodes\n\n  const realEdges = edges.filter(e => {\n    const edgeNodes = nodes.filter(n => n.id === e.u || n.id === e.v);\n    return edgeNodes.length === 2;\n  }); // Set edges\n\n  realEdges.forEach(edge => {\n    g.setEdge(edge.u, edge.v, {\n      curve: d3.curveBasis,\n      arrowheadClass: 'arrowhead'\n    });\n  });\n  innerSvg.call(render, g);\n  setUpNodeHighlighting();\n  setUpZoomSupport();\n}; // rerender graph when filtering dags with dependencies or not\n\n\ndocument.getElementById('deps-filter').addEventListener('change', function onChange() {\n  // reset searchbox\n  document.getElementById('searchbox').value = '';\n\n  if (this.checked) {\n    nodes = filteredNodes;\n  } else {\n    nodes = fullNodes;\n  }\n\n  renderGraph();\n}); // initial filter check and render\n\nif (document.getElementById('deps-filter').checked) {\n  nodes = filteredNodes;\n}\n\nrenderGraph();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./static/js/dag_dependencies.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/dag_dependencies.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});